{"formatVersion":"1.0","generatedAt":"2022-05-20T11:41:15Z","generatedBy":{"name":"Agora.io"},"keywords":["Agora","Video","Audio","RTM","RTC","webRTC"],"name":"Agora iOS Packages","overview":"Official Swift packages for iOS from Agora","packages":[{"keywords":["ios","rtc","rtm","streaming","swiftpm","video","video-streaming"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/AgoraIO/AgoraRtcEngine_iOS/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/AgoraIO/AgoraRtcEngine_iOS/main/README.md","summary":"Add Agora's Video SDK Swift Package for iOS ðŸ“¦","url":"https://github.com/AgoraIO/AgoraRtcEngine_iOS","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"AgoraRtcKit","products":[{"name":"AINS","targets":["AgoraAIDenoiseExtension"],"type":{"library":["automatic"]}},{"name":"AV1Dec","targets":["AgoraDav1dExtension"],"type":{"library":["automatic"]}},{"name":"ContentInspect","targets":["AgoraCIExtension"],"type":{"library":["automatic"]}},{"name":"FullAudioFormat","targets":["AgoraFullAudioFormatExtension"],"type":{"library":["automatic"]}},{"name":"ROIEnc","targets":["AgoraFDExtension"],"type":{"library":["automatic"]}},{"name":"ReplayKit","targets":["AgoraReplayKitExtension"],"type":{"library":["automatic"]}},{"name":"RtcBasic","targets":["AgoraCore","Agorafdkaac","Agoraffmpeg","AgoraRtcKit","AgoraSoundTouch"],"type":{"library":["automatic"]}},{"name":"SpatialAudio","targets":["AgoraSpatialAudioExtension"],"type":{"library":["automatic"]}},{"name":"SuperResolution","targets":["AgoraSuperResolutionExtension"],"type":{"library":["automatic"]}},{"name":"VideoPreprocess","targets":["AgoraVideoProcessExtension"],"type":{"library":["automatic"]}},{"name":"VirtualBackground","targets":["AgoraVideoSegmentationExtension"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AgoraAIDenoiseExtension","name":"AgoraAIDenoiseExtension"},{"moduleName":"AgoraCIExtension","name":"AgoraCIExtension"},{"moduleName":"AgoraCore","name":"AgoraCore"},{"moduleName":"AgoraDav1dExtension","name":"AgoraDav1dExtension"},{"moduleName":"AgoraFDExtension","name":"AgoraFDExtension"},{"moduleName":"AgoraFullAudioFormatExtension","name":"AgoraFullAudioFormatExtension"},{"moduleName":"AgoraReplayKitExtension","name":"AgoraReplayKitExtension"},{"moduleName":"AgoraRtcKit","name":"AgoraRtcKit"},{"moduleName":"AgoraSoundTouch","name":"AgoraSoundTouch"},{"moduleName":"AgoraSpatialAudioExtension","name":"AgoraSpatialAudioExtension"},{"moduleName":"AgoraSuperResolutionExtension","name":"AgoraSuperResolutionExtension"},{"moduleName":"AgoraVideoProcessExtension","name":"AgoraVideoProcessExtension"},{"moduleName":"AgoraVideoSegmentationExtension","name":"AgoraVideoSegmentationExtension"},{"moduleName":"Agorafdkaac","name":"Agorafdkaac"},{"moduleName":"Agoraffmpeg","name":"Agoraffmpeg"}],"toolsVersion":"5.3"}},"summary":"3.7.0","version":"3.7.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"AgoraRtcKit","products":[{"name":"AINS","targets":["AgoraAIDenoiseExtension"],"type":{"library":["automatic"]}},{"name":"AV1Dec","targets":["AgoraDav1dExtension"],"type":{"library":["automatic"]}},{"name":"ContentInspect","targets":["AgoraCIExtension"],"type":{"library":["automatic"]}},{"name":"FullAudioFormat","targets":["AgoraFullAudioFormatExtension"],"type":{"library":["automatic"]}},{"name":"JND","targets":["AgoraJNDExtension"],"type":{"library":["automatic"]}},{"name":"ROIEnc","targets":["AgoraFDExtension"],"type":{"library":["automatic"]}},{"name":"ReplayKit","targets":["AgoraReplayKitExtension"],"type":{"library":["automatic"]}},{"name":"RtcBasic","targets":["AgoraCore","Agorafdkaac","Agoraffmpeg","AgoraRtcKit","AgoraSoundTouch"],"type":{"library":["automatic"]}},{"name":"SuperResolution","targets":["AgoraSuperResolutionExtension"],"type":{"library":["automatic"]}},{"name":"VideoPreprocess","targets":["AgoraVideoProcessExtension"],"type":{"library":["automatic"]}},{"name":"VirtualBackground","targets":["AgoraVideoSegmentationExtension"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AgoraAIDenoiseExtension","name":"AgoraAIDenoiseExtension"},{"moduleName":"AgoraCIExtension","name":"AgoraCIExtension"},{"moduleName":"AgoraCore","name":"AgoraCore"},{"moduleName":"AgoraDav1dExtension","name":"AgoraDav1dExtension"},{"moduleName":"AgoraFDExtension","name":"AgoraFDExtension"},{"moduleName":"AgoraFullAudioFormatExtension","name":"AgoraFullAudioFormatExtension"},{"moduleName":"AgoraJNDExtension","name":"AgoraJNDExtension"},{"moduleName":"AgoraReplayKitExtension","name":"AgoraReplayKitExtension"},{"moduleName":"AgoraRtcKit","name":"AgoraRtcKit"},{"moduleName":"AgoraSoundTouch","name":"AgoraSoundTouch"},{"moduleName":"AgoraSuperResolutionExtension","name":"AgoraSuperResolutionExtension"},{"moduleName":"AgoraVideoProcessExtension","name":"AgoraVideoProcessExtension"},{"moduleName":"AgoraVideoSegmentationExtension","name":"AgoraVideoSegmentationExtension"},{"moduleName":"Agorafdkaac","name":"Agorafdkaac"},{"moduleName":"Agoraffmpeg","name":"Agoraffmpeg"}],"toolsVersion":"5.3"}},"summary":"3.6.3","version":"3.6.3"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"AgoraRtcKit","products":[{"name":"AgoraRtcKit","targets":["AgoraAIDenoiseExtension","AgoraCIExtension","AgoraCore","AgoraDav1dExtension","AgoraFDExtension","Agorafdkaac","Agoraffmpeg","AgoraFullAudioFormatExtension","AgoraJNDExtension","AgoraReplayKitExtension","AgoraRtcKit","AgoraSoundTouch","AgoraSuperResolutionExtension","AgoraVideoProcessExtension","AgoraVideoSegmentationExtension"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AgoraAIDenoiseExtension","name":"AgoraAIDenoiseExtension"},{"moduleName":"AgoraCIExtension","name":"AgoraCIExtension"},{"moduleName":"AgoraCore","name":"AgoraCore"},{"moduleName":"AgoraDav1dExtension","name":"AgoraDav1dExtension"},{"moduleName":"AgoraFDExtension","name":"AgoraFDExtension"},{"moduleName":"AgoraFullAudioFormatExtension","name":"AgoraFullAudioFormatExtension"},{"moduleName":"AgoraJNDExtension","name":"AgoraJNDExtension"},{"moduleName":"AgoraReplayKitExtension","name":"AgoraReplayKitExtension"},{"moduleName":"AgoraRtcKit","name":"AgoraRtcKit"},{"moduleName":"AgoraSoundTouch","name":"AgoraSoundTouch"},{"moduleName":"AgoraSuperResolutionExtension","name":"AgoraSuperResolutionExtension"},{"moduleName":"AgoraVideoProcessExtension","name":"AgoraVideoProcessExtension"},{"moduleName":"AgoraVideoSegmentationExtension","name":"AgoraVideoSegmentationExtension"},{"moduleName":"Agorafdkaac","name":"Agorafdkaac"},{"moduleName":"Agoraffmpeg","name":"Agoraffmpeg"}],"toolsVersion":"5.3"}},"summary":"3.6.2","version":"3.6.2"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/AgoraIO/AgoraAudio_iOS/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/AgoraIO/AgoraAudio_iOS/main/README.md","summary":"Agora's Audio SDK Swift Package for iOS ðŸ“¦","url":"https://github.com/AgoraIO/AgoraAudio_iOS","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"AgoraRtcKit","products":[{"name":"AINS","targets":["AgoraAIDenoiseExtension"],"type":{"library":["automatic"]}},{"name":"FullAudioFormat","targets":["AgoraFullAudioFormatExtension"],"type":{"library":["automatic"]}},{"name":"RtcBasic","targets":["AgoraCore","Agorafdkaac","AgoraRtcKit","AgoraSoundTouch"],"type":{"library":["automatic"]}},{"name":"SpatialAudio","targets":["AgoraSpatialAudioExtension"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AgoraAIDenoiseExtension","name":"AgoraAIDenoiseExtension"},{"moduleName":"AgoraCore","name":"AgoraCore"},{"moduleName":"AgoraFullAudioFormatExtension","name":"AgoraFullAudioFormatExtension"},{"moduleName":"AgoraRtcKit","name":"AgoraRtcKit"},{"moduleName":"AgoraSoundTouch","name":"AgoraSoundTouch"},{"moduleName":"AgoraSpatialAudioExtension","name":"AgoraSpatialAudioExtension"},{"moduleName":"Agorafdkaac","name":"Agorafdkaac"}],"toolsVersion":"5.3"}},"summary":"3.7.0","version":"3.7.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"AgoraRtcKit","products":[{"name":"AINS","targets":["AgoraAIDenoiseExtension"],"type":{"library":["automatic"]}},{"name":"FullAudioFormat","targets":["AgoraFullAudioFormatExtension"],"type":{"library":["automatic"]}},{"name":"RtcBasic","targets":["AgoraCore","Agorafdkaac","AgoraRtcKit","AgoraSoundTouch"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AgoraAIDenoiseExtension","name":"AgoraAIDenoiseExtension"},{"moduleName":"AgoraCore","name":"AgoraCore"},{"moduleName":"AgoraFullAudioFormatExtension","name":"AgoraFullAudioFormatExtension"},{"moduleName":"AgoraRtcKit","name":"AgoraRtcKit"},{"moduleName":"AgoraSoundTouch","name":"AgoraSoundTouch"},{"moduleName":"Agorafdkaac","name":"Agorafdkaac"}],"toolsVersion":"5.3"}},"summary":"3.6.3","version":"3.6.3"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"AgoraRtcKit","products":[{"name":"AgoraRtcKit","targets":["AgoraAIDenoiseExtension","AgoraCore","Agorafdkaac","AgoraFullAudioFormatExtension","AgoraRtcKit","AgoraSoundTouch"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AgoraAIDenoiseExtension","name":"AgoraAIDenoiseExtension"},{"moduleName":"AgoraCore","name":"AgoraCore"},{"moduleName":"AgoraFullAudioFormatExtension","name":"AgoraFullAudioFormatExtension"},{"moduleName":"AgoraRtcKit","name":"AgoraRtcKit"},{"moduleName":"AgoraSoundTouch","name":"AgoraSoundTouch"},{"moduleName":"Agorafdkaac","name":"Agorafdkaac"}],"toolsVersion":"5.3"}},"summary":"3.6.2","version":"3.6.2"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/AgoraIO/AgoraRTM_iOS/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/AgoraIO/AgoraRTM_iOS/main/README.md","summary":"Agora's Real-time Messaging SDK Swift Package for iOS ðŸ“¦","url":"https://github.com/AgoraIO/AgoraRTM_iOS","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"AgoraRtmKit","products":[{"name":"AgoraRtmKit","targets":["AgoraRtmKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AgoraRtmKit","name":"AgoraRtmKit"}],"toolsVersion":"5.3"}},"version":"1.4.10"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"}],"packageName":"AgoraRtmKit","products":[{"name":"AgoraRtmKit","targets":["AgoraRtmKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AgoraRtmKit","name":"AgoraRtmKit"}],"toolsVersion":"5.3"}},"version":"1.4.9"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"AgoraRtmKit","products":[{"name":"AgoraRtmKit","targets":["AgoraRtmKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AgoraRtmKit","name":"AgoraRtmKit"}],"toolsVersion":"5.3"}},"version":"1.4.9-special.1"}]},{"keywords":["agora","agora-sdk","agoraio","cocoapods","hacktoberfest","ios","macos","rtc","swift","video-streaming","webrtc"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/AgoraIO-Community/iOS-UIKit/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/AgoraIO-Community/iOS-UIKit/main/README.md","summary":"Swift package and CocoaPod to simply integrate Agora Video Calling or Live Video Streaming to your iOS or macOS app with just a few lines of code.","url":"https://github.com/AgoraIO-Community/iOS-UIKit","versions":[{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"AgoraUIKit_iOS","products":[{"name":"AgoraRtmControl","targets":["AgoraRtmControl"],"type":{"library":["automatic"]}},{"name":"AgoraUIKit","targets":["AgoraUIKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AgoraRtmControl","name":"AgoraRtmControl"},{"moduleName":"AgoraUIKit","name":"AgoraUIKit"}],"toolsVersion":"5.4"}},"summary":"All updates from 1.7.6-1.8.1 - User IDs use different integer formats across platforms, this now unifies them. - Fix bug #70, will propagate changes to the developer preview branch asap. - Fix crash on iPad with modal popups. - RTM Changes - compatible with React Native and others.   - This update changes messages to be sent as regular messages, rather than RtmRawMessage types. - Pod and Swift Package now have separate packages, RtmControl can be independent of AgoraUIKit. - New import statements, use `import AgoraUIKit` for iOS and macOS. - Bumped native RTC and RTM SDKs to 3.7.0 and 1.4.10 respectively. - The RTM package can be included in your project without Agora UIKit. - Can connect to RTM channel before joining RTC Fixes: - Fix issue where re-joining member's video feed would not render. - Fix issue where RTM messages are different from Agora UIKit React Native.","version":"4.0.0-preview.13"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"AgoraUIKit_iOS","products":[{"name":"AgoraUIKit_iOS","targets":["AgoraUIKit_iOS"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AgoraUIKit_iOS","name":"AgoraUIKit_iOS"}],"toolsVersion":"5.4"}},"version":"4.0.0-preview.12"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"AgoraUIKit_iOS","products":[{"name":"AgoraUIKit_iOS","targets":["AgoraUIKit_iOS"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AgoraUIKit_iOS","name":"AgoraUIKit_iOS"}],"toolsVersion":"5.4"}},"version":"4.0.0-preview.11"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"AgoraUIKit_iOS","products":[{"name":"AgoraRtmControl","targets":["AgoraRtmControl"],"type":{"library":["automatic"]}},{"name":"AgoraUIKit","targets":["AgoraUIKit","AgoraRtmControl"],"type":{"library":["automatic"]}},{"name":"AgoraUIKitBasic","targets":["AgoraUIKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AgoraRtmControl","name":"AgoraRtmControl"},{"moduleName":"AgoraUIKit","name":"AgoraUIKit"}],"toolsVersion":"5.4"}},"summary":"- Fix SwiftPM Caching Issue   - AgoraUIKit includes both libraries, AgoraUIKitBasic doesn't have RTM - Internally moved join success code to the callback delegate - Fix UInt conversion issue for numbers too large","version":"1.8.2"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"AgoraUIKit_iOS","products":[{"name":"AgoraRtmControl","targets":["AgoraRtmControl"],"type":{"library":["automatic"]}},{"name":"AgoraUIKit","targets":["AgoraUIKit","AgoraRtmControl"],"type":{"library":["automatic"]}},{"name":"AgoraUIKitBasic","targets":["AgoraUIKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AgoraRtmControl","name":"AgoraRtmControl"},{"moduleName":"AgoraUIKit","name":"AgoraUIKit"}],"toolsVersion":"5.4"}},"summary":"Testing 1.8.2-rc.2","version":"1.8.2-rc.2"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"AgoraUIKit_iOS","products":[{"name":"AgoraRtmControl","targets":["AgoraRtmControl"],"type":{"library":["automatic"]}},{"name":"AgoraUIKit","targets":["AgoraUIKit","AgoraRtmControl"],"type":{"library":["automatic"]}},{"name":"AgoraUIKitBasic","targets":["AgoraUIKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AgoraRtmControl","name":"AgoraRtmControl"},{"moduleName":"AgoraUIKit","name":"AgoraUIKit"}],"toolsVersion":"5.4"}},"summary":"Testing 1.8.2","version":"1.8.2-rc.1"}]}],"signature":{"certificate":{"issuer":{"commonName":"Apple Worldwide Developer Relations Certification Authority","organization":"Apple Inc.","organizationalUnit":"G3"},"subject":{"commonName":"Swift Package Collection: Agora Lab, Inc.","organization":"Agora Lab, Inc.","organizationalUnit":"48TB6ZZL5S","userID":"48TB6ZZL5S"}},"signature":"ewogICJhbGciIDogIlJTMjU2IiwKICAieDVjIiA6IFsKICAgICJNSUlGZnpDQ0JHZWdBd0lCQWdJUWRuTFFwN3lzWnBjekJxQzUyV2hNZFRBTkJna3Foa2lHOXcwQkFRc0ZBREIxTVVRd1FnWURWUVFERER0QmNIQnNaU0JYYjNKc1pIZHBaR1VnUkdWMlpXeHZjR1Z5SUZKbGJHRjBhVzl1Y3lCRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBlVEVMTUFrR0ExVUVDd3dDUnpNeEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUTUI0WERUSXlNRFV5TURFeU5ERXlOMW9YRFRJek1EVXlNREV5TkRFeU5sb3dnWXd4R2pBWUJnb0praWFKay9Jc1pBRUJEQW8wT0ZSQ05scGFURFZUTVRJd01BWURWUVFERENsVGQybG1kQ0JRWVdOcllXZGxJRU52Ykd4bFkzUnBiMjQ2SUVGbmIzSmhJRXhoWWl3Z1NXNWpMakVUTUJFR0ExVUVDd3dLTkRoVVFqWmFXa3cxVXpFWU1CWUdBMVVFQ2d3UFFXZHZjbUVnVEdGaUxDQkpibU11TVFzd0NRWURWUVFHRXdKVlV6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUx1QWRnVjVnalRHb1FrQUZUR08yYVlkRkxSSFJDeFhuRGtzeTRVc0tuNjE3NDFLelB6UUFOL0NJYU1hQnQwOWZTSUMrM3dtd21BamFSMmdhc2Jtc2ZIY01zUS94ZFVvejBBRWRmeEdKc2lTT1ZXUmEyWm9PaGEyZXNYSXdRLzArbE9VR3FMNTVJd0FwZFA5SXBwdzFFWUdMdCtrQW4vZXJaOFByaXZjNXB5cDR5dkc1ck9KeWFkcjFtanZqUXRDY2RoTEhXcmVZL3E4MERwRitXcG1jTGVEVE1kejAvcEZwUDZXQzlrVWdEYzZkbzJJQmlHMlNnYXRGQm9ZSG00Z3NTWE4vd3haSStvMjJMSWtHT0I2VkU4RmZCcGJkdWZISDArMmF6b1dRMFh5SHpBZnNDcUJJU01VS2YxUmpzTGR3dGlWanVEb1g4NlRZVDBDQXlCaXY2RUNBd0VBQWFPQ0FmRXdnZ0h0TUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVQ2Y3QUZaRDVyMlFLa2hLNUppaGpESmZzcDdJd1FRWUlLd1lCQlFVSEFRRUVOVEF6TURFR0NDc0dBUVVGQnpBQmhpVm9kSFJ3T2k4dmIyTnpjQzVoY0hCc1pTNWpiMjB2YjJOemNEQXpMWGQzWkhKbk16RTVNSUlCSGdZRFZSMGdCSUlCRlRDQ0FSRXdnZ0VOQmdrcWhraUc5Mk5rQlFFd2dmOHdnY01HQ0NzR0FRVUZCd0lDTUlHMkRJR3pVbVZzYVdGdVkyVWdiMjRnZEdocGN5QmpaWEowYVdacFkyRjBaU0JpZVNCaGJua2djR0Z5ZEhrZ1lYTnpkVzFsY3lCaFkyTmxjSFJoYm1ObElHOW1JSFJvWlNCMGFHVnVJR0Z3Y0d4cFkyRmliR1VnYzNSaGJtUmhjbVFnZEdWeWJYTWdZVzVrSUdOdmJtUnBkR2x2Ym5NZ2IyWWdkWE5sTENCalpYSjBhV1pwWTJGMFpTQndiMnhwWTNrZ1lXNWtJR05sY25ScFptbGpZWFJwYjI0Z2NISmhZM1JwWTJVZ2MzUmhkR1Z0Wlc1MGN5NHdOd1lJS3dZQkJRVUhBZ0VXSzJoMGRIQnpPaTh2ZDNkM0xtRndjR3hsTG1OdmJTOWpaWEowYVdacFkyRjBaV0YxZEdodmNtbDBlUzh3RmdZRFZSMGxBUUgvQkF3d0NnWUlLd1lCQlFVSEF3TXdIUVlEVlIwT0JCWUVGQ2lRZHRqMlZEOWdYR0ROVXRjVndESTRQVHFVTUE0R0ExVWREd0VCL3dRRUF3SUhnREFRQmdvcWhraUc5Mk5rQmdFakJBSUZBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBZW14S3NGRlY2UUN1ZXBpcmEreXdIZkRBTUlrb1cyNkh6VFM4UUdyQ2VLWFBmRHhlM0NBaFA1RHk3TFJ3WXhja1NMM3VpYmRyS0piVW5tNHNoZDhJUE4yam1Yc0d1K3F1bndmYitBNjYvQTBad3dpR2lkVnVjdFRJQVZyQUM3cEFobm5VOEdvaHBpNU11NkwwMFh4TENGb3Q5aTRaY2w2Mi94SzNWSG9kNGJBNFUxVG1SYWswVVR4cldrT29Hbkc4Sm96VnFCUzlHKzRPdy9SMWNuNFpJV0IzcUQ0UXZ3eWxYZVhuR2plMnlRMVNNdlZsRWZjOVdpTHVJMzd6NzBweVY1bm50WDZ5V1BseXZsOTh1Z29oaUVhdFRDRmlJWkxJMTV2ZFg3RzJ6ME1IamI3MjFvZHZnbmhMaVRnbmNCNWxRbmMwL0ZJRHBIcWtGQTJUQnRCSi93PT0iCiAgXQp9..jgGsgztiFzKqKoaaNVAZACvsMiW42LN0N3_Oq-GO2dsNhmSXjSdMTLYXw4lFN9NL1X_ENOyTyshjocoFYWm6advftTmwnObXkA4wOivQwhSOT3_9fMixZPLvGX9PgMmyogw3XBXTBxZeNVfDvrTsrhnDTlXFqby1BhFlODUQEuqSn8v5IKXPziFSxRdbIE39r62BDTC3Pro9KXqLF4NcZcp1SDdHaUEjE-YkGZWnjeVwGeKEgsmoGLBGBfN2vtFcJlWXyEVC6fzMtsIxRb7NR9qNCKdPPuowCfuWtPiNZRMB4cpjAATRjBNDGIZN2kz79GTjtVUx8Cy1rL1UZgg0vA"}}